###################################
# FILE     : angle_bisector.mpl
# AUTHOR   : H. Iwane <iwane@jp.fujitsu.com>
# CITATION : toy
# DOMAIN   : reals
# SyNRAC-20140624: solved
###################################
# A(0, 0)、B(1,0)、C(-1, sqrt(3)) に対して、
# 三角形 ABCの２等分線 (mx) x + (my) y = mz
# (mx, my, mz は係数) とBC の交点D(Dx, Dy) の座標を求めよ

[[Ex([k],
  And(Ex([C1],
        And(Ex([C0],
              And(Ex([mx, my],
                    And(Ex([mz],
                          And(Or(
                                 And(Not(0 = (((0 - C0) * (0 - C1)) - ((0 - C1) * (1 - C0)))), # A,B,C が colinear でない
                                     Or(And(Not(my = 0), # 角の２等分線 (mx)x + (my)y = mz が y軸と平行でない
                                            0 = ((1 * (0 - (mz / my))) - ((((mz - mx) / my) - (mz / my)) * 0)), # 角の２等分線が B を通る
                                            # 角の２等分線が BC を AB : AC に内分する点(つまり D)を通る
                                            0 = ((1 * ((((1 / (((((0 - C0)^2) + ((0 - C1)^2)))^(1/2) + 1)) * C1) + ((((((0 - C0)^2) + ((0 - C1)^2)))^(1/2) / (((((0 - C0)^2) + ((0 - C1)^2)))^(1/2) + 1)) * 0)) - (mz / my))) - ((((mz - mx) / my) - (mz / my)) * ((((1 / (((((0 - C0)^2) + ((0 - C1)^2)))^(1/2) + 1)) * C0) + ((((((0 - C0)^2) + ((0 - C1)^2)))^(1/2) / (((((0 - C0)^2) + ((0 - C1)^2)))^(1/2) + 1)) * 1)) - 0))))#,
                                       ))),
                              Or(And(Ex([k1],
                                       And(((k * 1) + ((1 - k) * C0)) = ((k1 * 0) + ((1 - k1) * 1)),
                                           ((k * 0) + ((1 - k) * C1)) = ((k1 * (mz / my)) + ((1 - k1) * ((mz - mx) / my))))),
                                     Not(my = 0)),
                                 And(Ex([k0],
                                       And(((k * 1) + ((1 - k) * C0)) = ((k0 * (mz / mx)) + ((1 - k0) * (mz / mx))),
                                           ((k * 0) + ((1 - k) * C1)) = ((k0 * 0) + ((1 - k0) * 1)))),
                                     my = 0)
                                ))),
                        Or(Not(mx = 0),
                           Not(my = 0)))),
                  And(C0 = (-1),
                      C1 = (3^(1 / 2))),
                  Dx = ((k * 1) + ((1 - k) * C0)))),
            Dy = ((k * 0) + ((1 - k) * C1)))),
      0 <= k,
      k <= 1)),
  And(-Dy < 0,3*Dx-1 = 0,3*Dy^2-1 = 0)],
[Ex([k, C1, C0, mx, my, mz, k1, k0],
  And(And(And(And(And(Or(
                         And(Not(0 = (((0 - C0) * (0 - C1)) - ((0 - C1) * (1 - C0)))),
                             Or(And(Not(my = 0),
                                    0 = ((1 * (0 - (mz / my))) - ((((mz - mx) / my) - (mz / my)) * 0)),
                                    0 = ((1 * ((((1 / (((((0 - C0)^2) + ((0 - C1)^2)))^(1/2) + 1)) * C1) + ((((((0 - C0)^2) + ((0 - C1)^2)))^(1/2) / (((((0 - C0)^2) + ((0 - C1)^2)))^(1/2) + 1)) * 0)) - (mz / my))) - ((((mz - mx) / my) - (mz / my)) * ((((1 / (((((0 - C0)^2) + ((0 - C1)^2)))^(1/2) + 1)) * C0) + ((((((0 - C0)^2) + ((0 - C1)^2)))^(1/2) / (((((0 - C0)^2) + ((0 - C1)^2)))^(1/2) + 1)) * 1)) - 0))))#,
                             ))),
                      Or(And(And(((k * 1) + ((1 - k) * C0)) = ((k1 * 0) + ((1 - k1) * 1)),
                                 ((k * 0) + ((1 - k) * C1)) = ((k1 * (mz / my)) + ((1 - k1) * ((mz - mx) / my)))),
                             Not(my = 0)),
                         And(And(((k * 1) + ((1 - k) * C0)) = ((k0 * (mz / mx)) + ((1 - k0) * (mz / mx))),
                                 ((k * 0) + ((1 - k) * C1)) = ((k0 * 0) + ((1 - k0) * 1))),
                             my = 0))),
                  Or(Not(mx = 0),
                     Not(my = 0))),
              And(C0 = (-1),
                  C1 = (3^(1 / 2))),
              Dx = ((k * 1) + ((1 - k) * C0))),
          Dy = ((k * 0) + ((1 - k) * C1))),
      0 <= k,
      k <= 1)),
  And(-Dy < 0,3*Dx-1 = 0,3*Dy^2-1 = 0)]]:

